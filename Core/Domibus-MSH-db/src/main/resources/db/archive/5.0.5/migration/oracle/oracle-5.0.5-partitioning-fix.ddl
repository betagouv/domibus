--
-- creates the partitioning procedures
-- creates the partition P1970 on TB_USER_MESSAGE and one for all messages then sets the partition interval
-- partitions by reference the detail tables (using only the FK index on TB_SIGNAL_MESSAGE)
--

CREATE OR REPLACE FUNCTION generate_partition_id(p_date IN DATE)
    RETURN NUMBER IS
    p_id NUMBER;
BEGIN
    DECLARE
        date_format CONSTANT STRING(10) := 'YYMMDDHH24';
    BEGIN
        SELECT to_number(to_char(p_date, date_format))
        INTO p_id
        FROM dual;
        RETURN p_id;
    END;
END;
/

CREATE OR REPLACE PROCEDURE PARTITION_TB_USER_MESSAGE
AS
BEGIN
    DECLARE
        p_id   NUMBER;
        p_name VARCHAR2(20);
        p_high NUMBER;
    BEGIN
        select generate_partition_id(TRUNC(sysdate+1)) into p_id from dual;
        p_name := 'P' || p_id;
        p_high := p_id || '0000000000';
        EXECUTE IMMEDIATE 'ALTER TABLE TB_USER_MESSAGE MODIFY PARTITION BY RANGE (ID_PK) (PARTITION P1970 VALUES LESS THAN (220000000000000000), PARTITION ' || p_name || ' VALUES LESS THAN (' || p_high || ')) UPDATE INDEXES ( IDX_USER_MSG_MESSAGE_ID	LOCAL, IDX_USER_MSG_ACTION_ID LOCAL, IDX_USER_MSG_AGREEMENT_ID LOCAL, IDX_USER_MSG_SERVICE_ID LOCAL, IDX_USER_MSG_MPC_ID LOCAL, IDX_FROM_ROLE_ID LOCAL, IDX_USER_MSG_TO_PARTY_ID LOCAL, IDX_TO_ROLE_ID LOCAL, IDX_USER_MSG_FROM_PARTY_ID LOCAL, IDX_TEST_MESSAGE LOCAL )';
    END;
END;
/

CREATE OR REPLACE PROCEDURE drop_partition (partition_name IN VARCHAR2) IS
BEGIN
    execute immediate 'ALTER TABLE TB_USER_MESSAGE DROP PARTITION ' || partition_name || ' UPDATE INDEXES';
END;
/

BEGIN
    PARTITION_TB_USER_MESSAGE();
END;
/

ALTER TABLE TB_MESSAGE_ACKNW MODIFY PARTITION BY REFERENCE ( FK_MSG_ACK_USER_MSG );

ALTER TABLE TB_MESSAGE_ACKNW_PROP MODIFY PARTITION BY REFERENCE ( FK_MSG_ACK_PROP_MSG_ACK );

ALTER TABLE TB_SJ_MESSAGE_GROUP MODIFY PARTITION BY REFERENCE ( FK_MSG_FG_GROUP_UM ) UPDATE INDEXES ( IDX_SJ_MG_ROLE_FK LOCAL );

ALTER TABLE TB_SJ_MESSAGE_FRAGMENT MODIFY PARTITION BY REFERENCE ( FK_SJ_MSG_FG_USER_MSG ) UPDATE INDEXES ( IDX_FK_SJ_MSG_FG_GROUP LOCAL );

ALTER TABLE TB_USER_MESSAGE_LOG MODIFY PARTITION BY REFERENCE ( FK_MSG_LOG_MSG_ID ) UPDATE INDEXES ( IDX_USER_LOG_RECEIVED LOCAL, IDX_MESSAGE_LOG_TZ_OFFSET LOCAL, IDX_MSG_ARCHIVED LOCAL, IDX_MSG_EXPORTED LOCAL, IDX_MSG_ACKNOWLEDGED LOCAL, IDX_MSG_PROCESSING_TYPE LOCAL, IDX_MESSAGE_LOG_MSG_STATUS_ID LOCAL, IDX_MESSAGE_LOG_MSG_ROLE_ID LOCAL, IDX_MSG_LOG_NOTIF_STATUS_ID LOCAL );

ALTER TABLE TB_PART_INFO MODIFY PARTITION BY REFERENCE ( FK_PART_INFO_USER_MSG );

ALTER TABLE TB_PART_PROPERTIES MODIFY PARTITION BY REFERENCE ( FK_PART_PROPS_PART_INFO ) UPDATE INDEXES ( IDX_PART_PROPS_PART_PROP LOCAL );

ALTER TABLE TB_MESSAGE_PROPERTIES MODIFY PARTITION BY REFERENCE ( FK_MSG_PROPS_USER_MSG );

ALTER TABLE TB_USER_MESSAGE_RAW MODIFY PARTITION BY REFERENCE ( FK_MSG_RAW_USER_MSG );

ALTER TABLE TB_SIGNAL_MESSAGE MODIFY PARTITION BY REFERENCE ( FK_TB_SIGNAL_USER_MSG ) UPDATE INDEXES ( IDX_SIG_MESS_REF_TO_MESS_ID LOCAL);

ALTER TABLE TB_SIGNAL_MESSAGE_LOG MODIFY PARTITION BY REFERENCE ( FK_SIGNAL_LOG_SIGNAL_ID ) UPDATE INDEXES ( IDX_SIGNAL_LOG_MSG_STATUS_ID LOCAL, IDX_SIGNAL_LOG_MSG_ROLE_ID LOCAL, IDX_SIGNAL_LOG_RECEIVED LOCAL );

ALTER TABLE TB_RECEIPT MODIFY PARTITION BY REFERENCE ( FK_TB_RECEIPT_SIGNAL_MSG );

ALTER TABLE TB_SIGNAL_MESSAGE_RAW MODIFY PARTITION BY REFERENCE ( FK_SIGNAL_MSG_RAW_SIGNAL_MSG );

ALTER TABLE TB_SEND_ATTEMPT MODIFY PARTITION BY REFERENCE ( FK_SEND_ATTEMPT_USER_MSG );

ALTER TABLE TB_ERROR_LOG MODIFY PARTITION BY REFERENCE ( FK_ERROR_LOG_MSG_ID ) UPDATE INDEXES ( IDX_ERROR_LOG_MSH_ROLE_ID LOCAL, IDX_MESSAGE_IN_ERROR_ID LOCAL, IDX_SIGNAL_MESSAGE_ID LOCAL );

ALTER TABLE TB_USER_MESSAGE SET INTERVAL (10000000000);
