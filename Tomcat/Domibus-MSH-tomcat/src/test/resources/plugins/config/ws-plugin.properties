#Enable the support for MTOM. Default to false.
#wsplugin.mtom.enabled=false

#Enable the schema validation. Default to false.
#wsplugin.schema.validation.enabled=false

#The maximum number of pending messages to be listed from the pending messages table. Setting this property is expected to avoid timeouts due to huge result sets being served.
#Setting this property to zero returns all pending messages
#wsplugin.messages.pending.list.max=500

#The maximum number of failed pushed messages to be listed from the backend message table. Setting this property is expected to avoid timeouts due to huge resultsets being served.
#Setting this property to zero returns all pending messages
#wsplugin.messages.push.failed.list.max=500

#The maximum number of messages to repushed to the backend. Setting this property is expected to avoid timeouts due to huge resultsets being updated.
#Setting this property to zero returns disable the limit
#wsplugin.messages.repush.list.max=100

#The notifications sent by Domibus to the plugin. The following values are possible: MESSAGE_RECEIVED,MESSAGE_FRAGMENT_RECEIVED,MESSAGE_SEND_FAILURE,MESSAGE_FRAGMENT_SEND_FAILURE,MESSAGE_RECEIVED_FAILURE,MESSAGE_FRAGMENT_RECEIVED_FAILURE,MESSAGE_SEND_SUCCESS,MESSAGE_FRAGMENT_SEND_SUCCESS,MESSAGE_STATUS_CHANGE,MESSAGE_FRAGMENT_STATUS_CHANGE,MESSAGE_DELETE_BATCH,MESSAGE_DELETED
#wsplugin.messages.notifications=MESSAGE_RECEIVED,MESSAGE_SEND_FAILURE,MESSAGE_RECEIVED_FAILURE,MESSAGE_SEND_SUCCESS,MESSAGE_STATUS_CHANGE

#Timeout values for communication between the ws plugin and the backend service
#ConnectionTimeOut - Specifies the amount of time, in milliseconds, that the consumer will attempt to establish a connection before it times out. 0 is infinite.
#wsplugin.dispatcher.connectionTimeout=60000

#ReceiveTimeout - Specifies the amount of time, in milliseconds, that the consumer will wait for a response before it times out. 0 is infinite.
#wsplugin.dispatcher.receiveTimeout=60000

#Allows chunking when sending messages to the backend service
#wsplugin.dispatcher.allowChunking=false

#If domibus.dispatcher.allowChunking is true, this property sets the threshold at which messages start getting chunked(in bytes). Messages under this limit do not get chunked. Defaults to 100 MB.
#wsplugin.dispatcher.chunkingThreshold=104857600

#Specifies if the connection will be kept alive between C2-C1 and C3-C4. Default value is true.
#wsplugin.dispatcher.connection.keepAlive=true

# The cron expression used to trigger the worker to send notification to the backend.
# E.g.: 0 0/1 * * * ?
#wsplugin.dispatcher.worker.cronExpression=0 0/1 * * * ?

#Queues
#This queue is used by the ws plugin to send the files in parallel to the backend
wsplugin.send.queue=domibus.wsplugin.send.queue

# Specify concurrency limits via a "lower-upper" String, e.g. "5-10", or a simple upper limit String, e.g. "10" (the lower limit will be 1 in this case)
# when sending files
#wsplugin.send.queue.concurrency=5-20

#############################################################
#Rules for dispatching notifications and messages to backend
#############################################################
#Description of the rule
#wsplugin.push.rules.[ruleName]=first rule description

#Recipient fo the domibus message
#wsplugin.push.rules.[ruleName].recipient=finalRecipientName

#Endpoint to be used for a given type and a given recipient
#wsplugin.push.rules.[ruleName].endpoint=http://localhost:8080/backend

#Formatted description of the retry mechanism  Format: retryTimeout;retryCount;(CONSTANT - SEND_ONCE) (ex: 4;12;CONSTANT)"
#wsplugin.push.rules.[ruleName].retry=60;5;CONSTANT

#Type of notification that will trigger a dispatch (RECEIVE_SUCCESS,RECEIVE_FAIL,SEND_SUCCESS,SEND_FAILURE,MESSAGE_STATUS_CHANGE,SUBMIT_MESSAGE,DELETED,DELETED_BATCH)
#wsplugin.push.rules.[ruleName].type=RECEIVE_SUCCESS,RECEIVE_FAIL,SEND_SUCCESS,SEND_FAILURE,MESSAGE_STATUS_CHANGE,SUBMIT_MESSAGE,DELETED,DELETED_BATCH

#
# Domain specific properties
#
# The WS Plugin configuration allows to define specific properties per domain
# (e.g., queue concurrency for the send queue).

#
# DOMAIN 1 (example)
#

# Specify concurrency limits via a "lower-upper" String, e.g. "5-10", or a simple upper limit String, e.g. "10" (the lower limit will be 1 in this case)
# when sending files
#DOMAIN1.wsplugin.send.queue.concurrency=5-20